name: web-app deployment
on:
  workflow_dispatch:

jobs:
  deploy:
    name: 'CD Pipeline For WAR'
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    steps:
    - uses: actions/checkout@v2

    - name: Install AWS CLI 2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

    - name: configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

    - name: Pull from S3
      run: |
       aws s3api get-object --bucket <bucket-name> 

    - name: creating Web EC2
      run: |
      aws ec2 run-instances --subnet-id  subnet-038abbaa25c3daf1c --launch-template LaunchTemplateId=<web-template-id>,Version=1 | grep InstanceId >> instance.txt

      awk '{print $2}' instance.txt | sed 's/"//g'|sed 's/,//g' >> instance-id.txt

      aws ec2 describe-instances --instance-ids $(cat instance-id.txt) --query 'Reservations[*].Instances[*].PublicIpAddress' --output text --region ap-south-1 >> publicip.txt

    - name: copy file via ssh key
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST_DNS }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: 'code.war'
        target: '/home/ubuntu'
        
    - name: ssh to ec2
      uses: fifsky/ssh-action@master
      with:
       command: |
        unzip code.war code
        sudo cp code/* /var/www/html/
       host: ${{ secrets.HOST_dns }}
       user: ubuntu
       key: ${{ secrets.EC2_SSH_KEY}}

    - name:
      run: |
      aws ec2 create-launch-template --launch-template-name <web-template-id>
      aws autoscalling update-auto-scaling-group --auto-scaling-group-name <ASG_NAME> --launch-template <Launch Template Name>


    
deploy2:
    name: 'CD Pipeline For ZIP'
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    steps:
    - uses: actions/checkout@v2

    - name: Install AWS CLI 2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

    - name: configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

    - name: Pull from S3
      run: |
       aws s3api get-object --bucket <bucket-name> 

    - name: creating Web EC2
      run: |
      aws ec2 run-instances --subnet-id  subnet-038abbaa25c3daf1c --launch-template LaunchTemplateId=<web-template-id>,Version=1 | grep InstanceId >> instance.txt

      awk '{print $2}' instance.txt | sed 's/"//g'|sed 's/,//g' >> instance-id.txt

      aws ec2 describe-instances --instance-ids $(cat instance-id.txt) --query 'Reservations[*].Instances[*].PublicIpAddress' --output text --region ap-south-1 >> publicip.txt

    - name: copy file via ssh key
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST_DNS }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: 'code.zip'
        target: '/home/ubuntu'
        
    - name: ssh to ec2
      uses: fifsky/ssh-action@master
      with:
       command: |
        unzip code.zip code
        sudo cp code/* $CATALINA_HOME\webapps
       host: ${{ secrets.HOST_dns }}
       user: ubuntu
       key: ${{ secrets.EC2_SSH_KEY}}

    - name:
      run: |
      aws ec2 create-launch-template --launch-template-name <web-template-id>
      aws autoscalling update-auto-scaling-group --auto-scaling-group-name <ASG_NAME> --launch-template <Launch Template Name>

    